#%RAML 1.0
title: CoffAPI
version: v1
baseUri: http://api.coffapi.com/v1

schemas:
   beanItemValidationSchema : !include schemas/beanItemValidationSchema.json
   drinkItemValidationSchema : !include schemas/drinkItemValidationSchema.json
   drinkItemResponseSchema: !include schemas/drinkItemResponseSchema.json

/beans:
  get:
    description: Get a list of coffee beans based on name
    queryParameters:
      beanName:
        description : "Name of the bean product from the manufacturer"
        required    : false
        minLength   : 3
        type        : string
        example     : "Espresso Dark Roast Arabica USDA Organic"
      beanOrganic:
        description : "Indication as to whether this specific bean product is USDA Organic"
        required    : false
        type        : boolean
        example     : true
      beanDecaf:
        description : "Indication as to whether this specific bean product is decaffeinated"
        required    : false
        type        : boolean
        example     : false
    responses:
      200:
        body:
          application/json:
            example: !include examples/beanListResponse.json
  post:
    description: Add a new type of coffee bean, optionally with some ideal drinks to go with that bean
    body:
      application/json:
        schema: beanItemValidationSchema
        example: !include examples/beanItemPost.json
    responses:
      200:
        body:
          application/json:
            example: { "message": "The bean has been properly entered" }
  /{beanID}:
    description: Retrieve a <<resourcePathName|!singularize>> entry by its ID number
    get:
      responses:
        200:
          body:
            application/json:
              example: !include examples/beanItemResponse.json
/drinks:
  get:
    description: Get a list of the different ways to prepare coffee
    queryParameters:
      drinkName:
        description:  Ask the API by name of drink
        required   :  false
        type       :  string
        example    :  "Espresso Romano"
    responses:
      200:
        body:
          application/json:
            example: !include examples/longDrinkList.json
  post:
    description: Add a new type of drink
    body:
      application/json:
        schema: drinkItemValidationSchema
        example: !include examples/drinkItemPost.json
  /{beanID}:
    description: Retrieve a <<resourcePathName|!singularize>> entry by its ID number
    get:
      responses:
        200:
          body:
            application/json:
              schema: drinkItemResponseSchema
              example: !include examples/drinkItemResponse.json
